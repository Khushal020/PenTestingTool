from __future__ import print_function
import sys
import time
import random
from urllib.parse import urlparse
from proxies import get_proxies
import settings
import requests
import bs4

def get_user_agent():
    with open('user_agent.txt', 'r') as all_user_agent:
        user_agent_list = [_.strip() for _ in all_user_agent.readlines()]

    return random.choice(user_agent_list)

def bingDorkFinder(line, url, output):
        answer = line.replace('\n', '') + ' ' + 'site:' + url
        print(answer)
        try:
            listPerpage = "+&count=50&first="
            sequence = range(1, 1031, 10)
            counter = 0
            for pageNumber in str(sequence):
                response = requests.get("https://bing.com/search?q=" + answer + listPerpage + pageNumber)
                soup = bs4.BeautifulSoup(response.content, 'lxml')
                baseclass = soup.find_all("li", attrs={"class": "b_algo"})
                for i in baseclass:
                    urls = i.a['href']
                    if url in urls:
                        print(urls)
                        save(output, urls)
            time.sleep(1)

        except requests.exceptions.RequestException:
            print("There is no connection, please check internet connection")
        except Exception as err:
            print("There is an error occured!", err)

def save(output, data):
    if output == None:
        output = open('output.txt', 'a')

    output.write(data + '\n')
    


def dorks():
    output = None
    url = input('Enter the target URL: ')

    if url.startswith('https'):
        url = url.replace('https://', '')
    if url.startswith('http'):
        url = url.replace('http://', '')
    if url.startswith('www'):
        url = url.replace('www.', '')

    url = url.replace('/', '')
    counter = 0

    with open('google_Dorks.txt', 'r') as dorks:
        lines = dorks.readlines()

    for line in lines:
        
        bingDorkFinder(line, url, output)

    print('Scan Completed..........')
            
            
    sys.exit()

if __name__ == "__main__":
    dorks()
